# Generated by Django 5.2.1 on 2025-05-31 11:38

import api_smartcontract.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('transaction_hash', models.CharField(help_text='Unique blockchain transaction hash (0x...)', max_length=66, primary_key=True, serialize=False, unique=True, validators=[api_smartcontract.validators.validate_transaction_hash])),
                ('block_number', models.PositiveIntegerField(db_index=True, help_text='Block number containing this transaction', validators=[api_smartcontract.validators.validate_block_number])),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-block_number'],
            },
        ),
        migrations.CreateModel(
            name='ContractEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log_index', models.PositiveIntegerField(help_text='Log index within the transaction receipt, ensuring uniqueness per transaction')),
                ('event_name', models.CharField(db_index=True, help_text='Name of the event emitted (e.g., TransactionSubmitted, ContractEvent)', max_length=100)),
                ('contract_address', models.CharField(db_index=True, help_text='Address of the contract that emitted the event', max_length=42, validators=[api_smartcontract.validators.validate_blockchain_address])),
                ('block_timestamp', models.DateTimeField(help_text='Timestamp of the block containing the event')),
                ('is_fraudulent', models.BooleanField(db_index=True, default=False, help_text='Flag indicating if the event is suspected to be fraudulent')),
                ('data', models.JSONField(help_text='Decoded event parameters/arguments as JSON')),
                ('event_from_address', models.CharField(blank=True, db_index=True, max_length=42, null=True, validators=[api_smartcontract.validators.validate_blockchain_address], verbose_name='Event From Address')),
                ('event_to_address', models.CharField(blank=True, db_index=True, max_length=42, null=True, validators=[api_smartcontract.validators.validate_blockchain_address], verbose_name='Event To Address')),
                ('event_amount', models.DecimalField(blank=True, decimal_places=0, max_digits=78, null=True, verbose_name='Event Amount')),
                ('event_tx_hash_param', models.TextField(blank=True, null=True, verbose_name='Event Tx Hash Parameter')),
                ('event_sender_address', models.CharField(blank=True, db_index=True, max_length=42, null=True, validators=[api_smartcontract.validators.validate_blockchain_address], verbose_name='Event Sender Address')),
                ('event_message', models.TextField(blank=True, null=True, verbose_name='Event Message')),
                ('event_onchain_timestamp', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='Event On-Chain Timestamp')),
                ('transaction', models.ForeignKey(help_text='The transaction in which this event occurred', on_delete=django.db.models.deletion.CASCADE, related_name='events', to='api_smartcontract.transaction')),
            ],
            options={
                'verbose_name': 'Contract Event',
                'verbose_name_plural': 'Contract Events',
                'ordering': ['-block_timestamp', '-log_index'],
                'unique_together': {('transaction', 'log_index')},
            },
        ),
    ]
